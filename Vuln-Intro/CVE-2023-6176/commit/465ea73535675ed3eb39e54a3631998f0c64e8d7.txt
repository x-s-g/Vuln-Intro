@@ -1611,27 +1611,6 @@ int decrypt_skb(struct sock *sk, struct sk_buff *skb,
 	return decrypt_internal(sk, skb, NULL, sgout, &darg);
 }
 
-static bool tls_sw_advance_skb(struct sock *sk, struct sk_buff *skb,
-			       unsigned int len)
-{
-	struct tls_context *tls_ctx = tls_get_ctx(sk);
-	struct tls_sw_context_rx *ctx = tls_sw_ctx_rx(tls_ctx);
-	struct strp_msg *rxm = strp_msg(skb);
-
-	if (len < rxm->full_len) {
-		rxm->offset += len;
-		rxm->full_len -= len;
-		return false;
-	}
-	consume_skb(skb);
-
-	/* Finished with message */
-	ctx->recv_pkt = NULL;
-	__strp_unpause(&ctx->strp);
-
-	return true;
-}
-
 static int tls_record_content_type(struct msghdr *msg, struct tls_msg *tlm,
 				   u8 *control)
 {
@@ -1894,7 +1873,11 @@ pick_next_record:
 			skb_queue_tail(&ctx->rx_list, skb);
 			ctx->recv_pkt = NULL;
 			__strp_unpause(&ctx->strp);
-		} else if (tls_sw_advance_skb(sk, skb, chunk)) {
+		} else {
+			consume_skb(skb);
+			ctx->recv_pkt = NULL;
+			__strp_unpause(&ctx->strp);
+
 			/* Return full control message to
 			 * userspace before trying to parse
 			 * another message type
@@ -1902,8 +1885,6 @@ pick_next_record:
 			msg->msg_flags |= MSG_EOR;
 			if (control != TLS_RECORD_TYPE_DATA)
 				goto recv_end;
-		} else {
-			break;
 		}
 	}
 
